name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Install dependencies
        run:  DEBIAN_FRONTEND=noninteractive sudo apt install -y nasm mtools # dosbox xvfb

      - name: Build
        run: ./build.sh

      #- name: Run tests
      #  run: xvfb-run dosbox -c "mount c ." -c "c:" -c "source\\gametest.exe" -c exit

      # Now store test results as artifact
      #- name: Archive test results
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: JUnit-XML
      #    path: JUNIT.XML

      #- name: Check test results
      #  run: python3 parse_junit_xml.py

      - name: Build installer
        run: ./build_installer.sh

      - name: Create disk images
        run: ./create_disk_image.sh

      - name: Create Windows installer
        run: ./create_windows_dosbox_package.sh

      # Now store built game as artifact
      - name: Archive game zip
        uses: actions/upload-artifact@v3
        with:
          name: game-zip
          path: zip/game.zip
      
      # Store built disk images as artifacts
      - name: Archive disk images
        uses: actions/upload-artifact@v3
        with:
          name: disk-images
          path: image*.img

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ./zip/game.zip
            image*.img
            DosPlatformGameWin32.zip
